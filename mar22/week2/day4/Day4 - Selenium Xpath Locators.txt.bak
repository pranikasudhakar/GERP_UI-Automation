Selenium - Locator using Xpath
==================================

When an element was not able to identify uniquely using below locators then we go for 6) Xpath

1. id - attribute; unique; should not have any numeric value or numbers - Covered
2. name - attribute; unique; when i cannot for id then go with name
3. linkText (<a> is a hyperlink with text) 
4. class - attribute; This should not have spaces i.e., if there is space ignore this locator and move to TagName
5. TagName

Syntax for Xpath: //tagName[@attribute='attributeValue']

Two type of Xpath:
===================
	1) Absolute Xpath
	==================
	/html/body/div[2]/table/tbody/tr/td[2]/table/tbody/tr[4]/td/table/tbody/tr/td[2]/table/tbody/tr[5]/td/form/table/tbody/tr[2]/td[2]/b/font/input[1]
	
	2) Relative Xpath
	==================
	a) Attribute Based Xpath:
	============================
	Syntax: //tagName[@attribute='attributeValue']
	Example: //tagName[@id='username']
	
	b) Text Based Xpath:
	=====================
	Syntax: //tagName[text()='textValue']
	//a[text()='SIGN-OFF']

	c) Partial Attribute Xpath:
	===========================
	Syntax: //tagName[contains(@attribute,'partial Text Attribute Value')]
	
	d) Partial Text Xpath:
	======================
	Syntax: //tagName[contains(text(),'partial Text Value')]
	
	
	Collections Based Xpath (or) Index Based Xpath
	===============================================
	Xpath based on the indexes with or without relations
	Note: Index starts with 1
	
	a) Using the Item index: 
	Syntax:(xpath)[index]
	
	b) Using Child Item index:
	Syntax: (parent-xpath)/child-tagname[index]

	c) Using AND Condition:
	Syntax: //tagName[@attribute1='value1' and @attribute2='value2']
	
	d) Using OR Condition:
	Syntax: //tagName[@attribute1='value1' or @attribute2='value2']
	
	Axes Based Xpath (or) Relation Based Xpath
	==========================================
	Xpath based on the sibling and cousing relationship
	
	a) Younger Sibling:
	Syntax: (xpath)/following-sibling::sibling-tagName
	(//input[@name='password'])/following-sibling::label
	
	a) Elder Sibling:
	Syntax: (xpath)/preceeding-sibling::sibling-tagName
	(//label[@id='message18'])/preceding-sibling::input
	
	c) Younger Cousin:
	Syntax: (xpath)/following::cousing-tagname
	(//a[text()='Software Testing'])/following::a[2]
	
	d)Elder Cousin:
	Syntax: (xpath)/preceding::cousing-tagname
	(//a[text()='Cucumber Testing'])/preceding::a[2]
	
	Parent-Child XPath:
	====================
	a) Parent to Child:
	Xpath based on the [grand] parent to [grand] child relationship
	
	Syntax: (xpath of Parent)/child-tagName
	((//div[@class='canvas-graph'])[7])/div
	
	
	b) Child to Parent
	Syntax: (xpath of Child)/parent::parent-tagName
	((//b[@class='caret'])[2])/parent::a
	
	c) Child to Ancestor
	Syntax: (xpath of Child)/ancestor::ancestor-tagName
	
	d) Ancestor to Child
	Syntax: (xpath of ancestor)/child-tagName
	
	e) Last Child:
		Syntax: (xpath of parent)/child-tagName[last()]

ImplicitylyWait:
===============	
driver.manage().timeouts().implicitlyWait(20, TimeUnit.SECONDS);
